CONNECT TO MOVIES;

CREATE TABLE MOVIES (MOVIEID INT NOT NULL PRIMARY KEY, POSTERURL VARCHAR(255), TITLE VARCHAR(255), OVERVIEW VARCHAR(1000));
CREATE TABLE GENRES (GENREID INT NOT NULL PRIMARY KEY, NAME VARCHAR(255));
CREATE TABLE PRODUCTION_COMPANIES (COMPANYID INT NOT NULL PRIMARY KEY, NAME VARCHAR(255));
CREATE TABLE MOVIE_GENRES (MOVIEID INT, GENREID INT, FOREIGN KEY (MOVIEID) REFERENCES MOVIES(MOVIEID), FOREIGN KEY (GENREID) REFERENCES GENRES(GENREID));
CREATE TABLE MOVIE_PRODUCTION_COMPANIES (MOVIEID INT, COMPANYID INT, FOREIGN KEY (MOVIEID) REFERENCES MOVIES(MOVIEID), FOREIGN KEY (COMPANYID) REFERENCES PRODUCTION_COMPANIES(COMPANYID));
CREATE TABLE RATINGS (QUERYID INT, MOVIEID INT, RATING INT);

LOAD FROM /moviestable OF IXF INSERT INTO MOVIES(MOVIEID, POSTERURL, TITLE, OVERVIEW);
LOAD FROM /genrestable OF IXF INSERT INTO GENRES(GENREID, NAME);
LOAD FROM /prodcomptable OF IXF INSERT INTO PRODUCTION_COMPANIES(COMPANYID, NAME);
LOAD FROM /genrelinktable OF IXF INSERT INTO MOVIE_GENRES(MOVIEID, GENREID);
LOAD FROM /prodcomplinktable OF IXF INSERT INTO MOVIE_PRODUCTION_COMPANIES(MOVIEID, COMPANYID);

BACKUP DB MOVIES ONLINE TO /dev/null;

CONNECT TO MOVIES;

set integrity for MOVIE_GENRES immediate checked;
set integrity for MOVIE_PRODUCTION_COMPANIES immediate checked;

CREATE OR REPLACE FUNCTION
MOVIEREC(INTEGER, INTEGER, INTEGER)
RETURNS TABLE (MOVIEID INTEGER)
LANGUAGE PYTHON PARAMETER STYLE NPSGENERIC FENCED NOT THREADSAFE  NO FINAL CALL  DISALLOW PARALLEL  NO DBINFO
DETERMINISTIC NO EXTERNAL ACTION CALLED ON NULL INPUT
NO SQL EXTERNAL NAME '/database/config/db2fenc1/rec_udf.py';
